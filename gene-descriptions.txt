For maintainer description, see below. 
User description (should this go elsewhere?):

Gene descriptions are intended to give rough idea of what the function of a
gene might be; they are generated automatically as follows. EnsEMBL has a
mapping from predicted peptides to a number of databases, SWISS-PROT and
SP-TrEMBL among them. (For information on how this mapping is established,
see protein.txt)

For each EnsEMBL gene, the mapping to SWISS-PROT or SP-TrEMBL of the
corresponding EnsEMBL peptides is followed, and the SWISS-PROT/SP-TrEMBL
description line is taken as 'the gene description'. 

Since one gene can have many peptides, and since one peptide can map to
several different SWISS-PROT or SP-TrEMBL proteins, some precedence rules are
in place. They are:

 - SWISS-PROT takes precedence over SP-TrEMBL. If there are more than one
   different SWISS-PROT proteins for an EnsEMBL gene, the first one
   taken. This may sound arbitrary, but in practice, these descriptions are
   very similar

 - If there are several SP-TrEMBL mappings, precedence is established on the
   basis of the occurrence of regular expression patterns in the description
   line. In order of increasing precerence, these patterns currently are:

      unknown hypothetical putative novel probable [0-9]{3} kDa fragment cdna
      protein. 
   
   If after this, two SP-TrEMBL description lines still have equal
   precedence, the longest description is taken. This precedence list is a
   bit arbitrary, and is bound to be 'tweaked' to get 'better' descriptions
   (see ensembl/scripts/gene-descriptions.pl for the most recent list)

   We don't (yet) rank the descriptions using the similarity measure used in
   establishing the mapping.

At this stage, there are still many (perhaps half) of the genes without a
description. For these, the consensus description of the family or 'Tribe' to
which they belong are used to are transferred (see family.txt for a
description of the Family database).

Occasionally, peptides from one gene fall into different families. In these
cases, the same ranking as described above for multiple SP-TrEMBL mappings is
used to choose a description.

------------------------------------------------------------------------

Maintainer description:

Descriptions are taken from SWISS-PROT/TREMBL, and if no close enough mapping
is found, from the family database. You can run the non-family bit already,
so that if bad comes to worst, you at least already have the obvious bits
(the family thing adds another 30% though, so it's well worth doing it). 

 - make sure the peptide mapping has been done

 - get hold of the swissprot/trembl file used for the peptide mapping (it can
   be big and can contain the swissprot internal bits, like {}

 - assuming ensembl/scripts is in your $PATH, do:

     sp-descriptions.pl < swiss-prot-flatfile  > sp-descriptions.dat

   This produces a summary of sp/trembl -> descriptions mappings

 - next, on the database that contains the peptide mapping, do:
 
     sp-mapping-dump.sh -h host -u user database

   This produces a file ens-sptr-mapping.dat (and .log), containing the ENSG
   -> ENSP -> sp/trembl accnos mapping

 - Produce the tab-delimited data file to be loaded into the gene-description
   table:

     gene-descriptions.pl sp-descriptions.dat ens-sptr-mapping.dat \
       > gene-descriptions.txt

   Have a look at this file; if it contains too much junk  (like the
   2900010M17Rik cruft), filter it. It's easiest to do this inside the
   gene-descriptions.pl script itself (see towards the end of the script).

 - Load gene-descriptions.dat into a into an ensembl database, e.g. as

     echo "load data infile '`pwd`/gene-descriptions.txt' \
             into table gene_description;" | mysql -u user -host databasename

 - (preceeding steps should be integrated with the peptide mapping pipeline)

 - The next step is adding the family additions for genes that have no
   description. This is done by running

     ensembl/scripts/desc-from-fam.sh coreDB famDB DBNAME -h host -u user 

   where coreDB is an ensembl database, famDB the family database, and DBNAME
   the database name used inside famDB for looking up the ids. This will be
   something like ENSEMBLGENE or ENSMUSPEPT or whatever (i.e., not the
   prefix, but the thing that is used in the db_name column of the
   family_members table).  The script will, in famDB, create a merged
   gene_description table that is a replacement for the old one in coreDB
   (note: famDB and coreDB should be on the same mysql server, otherwise you
   can't do the required cross-database joins).

   The script writes a few statistics to stdout.  If the numbers under
   'all_old_descriptions' and 'all_new_descriptions' are the same, this means
   that none have been added. This is likely the result of using the wrong
   DBNAME. 

   The merged gene description table that is created in famDB does not
   automatically replace the old one; this has to be done by hand, e.g. as
   follows:

     delete from gene_description;
     insert into gene_description select * from famDB.gene_description;

   (assuming again famdb and coredb are on the same  server). 
